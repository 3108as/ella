Zdroje:
AccessControler http://java.sun.com/javase/6/docs/api/java/security/AccessController.html
AccessContext   http://java.sun.com/javase/6/docs/api/java/security/AccessControlContext.html

Zpracovani casti kodu zavisle na uziv. pravech
==========================

somemethod() {
    ...normal code here...
    AccessController.doPrivileged(new PrivilegedAction() {
        public Object run() {
            // privileged code goes here, for example:
            System.loadLibrary("awt");
            return null; // nothing to return
        }
    });
   ...normal code here...
}


Osetrena vyjimka z prav
=======================

somemethod() throws FileNotFoundException {
    ...normal code here...
  try {
    FileInputStream fis = (FileInputStream) AccessController.doPrivileged(
      new PrivilegedExceptionAction() {
        public Object run() throws FileNotFoundException {
            return new FileInputStream("someFile");
        }
      }
    );
  } catch (PrivilegedActionException e) {
    // e.getException() should be an instance of FileNotFoundException,
    // as only "checked" exceptions will be "wrapped" in a
    // PrivilegedActionException.
    throw (FileNotFoundException) e.getException();
  }
    ...normal code here...
}

Test prav
=========
Public void someMethod() {
	Permission permission =
	  new java.net.SocketPermission("localhost:8080", "connect");
	AccessController.checkPermission(permission);
	// Sensitive code starts here
	Socket s = new Socket("localhost", 8080);
}


Zjistovani prav podle kontextu
===============
acc = AccessController.getContext()
acc.checkPermission(permission)


